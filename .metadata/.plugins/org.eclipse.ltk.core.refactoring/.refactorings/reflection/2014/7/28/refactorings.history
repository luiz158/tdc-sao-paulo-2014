<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename method &apos;br.com.caelum.reflection.betterprovider2.ProviderImplementation.createInstance(...)&apos; to &apos;getConstructor&apos;&#x0A;- Original project: &apos;reflection&apos;&#x0A;- Original element: &apos;br.com.caelum.reflection.betterprovider2.ProviderImplementation.createInstance(...)&apos;&#x0A;- Renamed element: &apos;br.com.caelum.reflection.betterprovider2.ProviderImplementation.getConstructor(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;createInstance&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;br.com.caelum.reflection.betterprovider2{ProviderImplementation.java[ProviderImplementation~createInstance~QClass\&lt;*&gt;;~\[QObject;" name="getConstructor" references="true" stamp="1404985083780" version="1.0"/>&#x0A;<refactoring comment="Rename package &apos;br.com.caelum.reflection.betterprovider2&apos; to &apos;com.caelum.reflection.betterprovider2&apos;&#x0A;- Original project: &apos;reflection&apos;&#x0A;- Original element: &apos;reflection/src/br.com.caelum.reflection.betterprovider2&apos;&#x0A;- Renamed element: &apos;reflection/src/com.caelum.reflection.betterprovider2&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename package &apos;br.com.caelum.reflection.betterprovider2&apos;" flags="589830" hierarchical="false" id="org.eclipse.jdt.ui.rename.package" input="/src&lt;br.com.caelum.reflection.betterprovider2" name="com.caelum.reflection.betterprovider2" qualified="false" references="true" stamp="1404985794697" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private static Scanner givenClassNameAndMethodName()&apos; from &apos;com.caelum.reflection.method.CallMethodTest.main()&apos; to &apos;com.caelum.reflection.method.CallMethodTest&apos;&#x0A;- Original project: &apos;reflection&apos;&#x0A;- Method name: &apos;givenClassNameAndMethodName&apos;&#x0A;- Destination type: &apos;com.caelum.reflection.method.CallMethodTest&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;givenClassNameAndMethodName&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.caelum.reflection.method{CallMethodTest.java" name="givenClassNameAndMethodName" replace="false" selection="141 381" stamp="1404986119167" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Convert local variable &apos;com.caelum.reflection.method.CallMethodTest.givenClassNameAndMethodName().className&apos; in &apos;com.caelum.reflection.method.CallMethodTest.givenClassNameAndMethodName()&apos; to field&#x0A;- Original project: &apos;reflection&apos;&#x0A;- Original element: &apos;com.caelum.reflection.method.CallMethodTest.givenClassNameAndMethodName().className&apos;&#x0A;- Field name: &apos;className&apos;&#x0A;- Initialize field in method&#x0A;- Declared visibility: &apos;private&apos;&#x0A;- Declare field &apos;static&apos;" description="Convert local variable &apos;className&apos; to field" final="false" flags="2" id="org.eclipse.jdt.ui.promote.temp" initialize="1" input="/src&lt;com.caelum.reflection.method{CallMethodTest.java" name="className" selection="426 30" stamp="1404986123630" static="true" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Convert local variable &apos;com.caelum.reflection.method.CallMethodTest.givenClassNameAndMethodName().methodName&apos; in &apos;com.caelum.reflection.method.CallMethodTest.givenClassNameAndMethodName()&apos; to field&#x0A;- Original project: &apos;reflection&apos;&#x0A;- Original element: &apos;com.caelum.reflection.method.CallMethodTest.givenClassNameAndMethodName().methodName&apos;&#x0A;- Field name: &apos;methodName&apos;&#x0A;- Initialize field in method&#x0A;- Declared visibility: &apos;private&apos;&#x0A;- Declare field &apos;static&apos;" description="Convert local variable &apos;methodName&apos; to field" final="false" flags="2" id="org.eclipse.jdt.ui.promote.temp" initialize="1" input="/src&lt;com.caelum.reflection.method{CallMethodTest.java" name="methodName" selection="593 31" stamp="1404986127781" static="true" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename local variable &apos;valor&apos; in &apos;com.caelum.reflection.method.CallMethodTest.main(...)&apos; to &apos;value&apos;&#x0A;- Original project: &apos;reflection&apos;&#x0A;- Original element: &apos;com.caelum.reflection.method.CallMethodTest.main(String[]).valor&apos;&#x0A;- Renamed element: &apos;valor&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;valor&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.caelum.reflection.method{CallMethodTest.java[CallMethodTest~main~\[QString;@valor!661!694!668!672!QString;!0!false" name="value" references="true" stamp="1405130870970" version="1.0"/>
</session>