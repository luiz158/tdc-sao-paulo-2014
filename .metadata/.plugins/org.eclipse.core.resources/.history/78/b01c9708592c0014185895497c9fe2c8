package com.fj91.guava.optional;

import static org.junit.Assert.*;

import org.junit.Test;

import com.google.common.base.Optional;

public class OptionalTest {

	@Test
	public void shouldReturnIntegerValue() throws Exception {
		Optional<Integer> possible = Optional.of(5);
		
		assertEquals(5, possible.get(), 0);
	}
	
	@Test
	public void shouldIndicateThatIntegerIsPresent() throws Exception {
		Optional<Integer> possible = Optional.of(5);
		
		assertTrue(possible.isPresent());
	}
	
	@Test
	public void shouldIndicateThatIntegerIsNotPresent() throws Exception {
		Optional<Integer> possible = Optional.absent();
		
		assertFalse(possible.isPresent());
	}
	
	@Test
	public void shouldReturnNullableValue() throws Exception {
		Integer myNumber = null;
		Optional<Integer> possible = Optional.fromNullable(myNumber);

		assertFalse(possible.isPresent());
	}
	
	@Test
	public void shouldReturnDefaultValueWhenThereIsNullValue() throws Exception {
		Integer myNumber = null;
		Optional<Integer> possible = Optional.of(myNumber);
		
		assertEquals(10, possible.or(10), 0);
	}
	
}
